package io.github.cyning.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import io.github.cyning.greendao.HotArticle;
import io.github.cyning.greendao.Key_Value;

import io.github.cyning.greendao.HotArticleDao;
import io.github.cyning.greendao.Key_ValueDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig hotArticleDaoConfig;
    private final DaoConfig key_ValueDaoConfig;

    private final HotArticleDao hotArticleDao;
    private final Key_ValueDao key_ValueDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        hotArticleDaoConfig = daoConfigMap.get(HotArticleDao.class).clone();
        hotArticleDaoConfig.initIdentityScope(type);

        key_ValueDaoConfig = daoConfigMap.get(Key_ValueDao.class).clone();
        key_ValueDaoConfig.initIdentityScope(type);

        hotArticleDao = new HotArticleDao(hotArticleDaoConfig, this);
        key_ValueDao = new Key_ValueDao(key_ValueDaoConfig, this);

        registerDao(HotArticle.class, hotArticleDao);
        registerDao(Key_Value.class, key_ValueDao);
    }
    
    public void clear() {
        hotArticleDaoConfig.getIdentityScope().clear();
        key_ValueDaoConfig.getIdentityScope().clear();
    }

    public HotArticleDao getHotArticleDao() {
        return hotArticleDao;
    }

    public Key_ValueDao getKey_ValueDao() {
        return key_ValueDao;
    }

}
